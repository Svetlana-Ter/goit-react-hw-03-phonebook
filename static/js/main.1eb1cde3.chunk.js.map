{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.js","components/Contact/Contact.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/Form/Form.module.css","components/Contact/Contact.module.css"],"names":["module","exports","Form","state","name","number","nameId","shortid","generate","numberId","handleInputChange","event","target","value","setState","handleSubmit","onSubmit","props","preventDefault","reset","this","className","styles","form","htmlFor","inputField","type","onChange","id","btn","React","Component","Contact","contacts","onDeleteContact","map","listItem","onClick","ContactsList","Filter","filterId","inputBlock","App","filter","addContact","data","contact","includes","window","confirm","prevState","filterContacts","e","getFilteredContacts","normalizedFilter","toLowerCase","deleteContact","contactId","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1eb1cde3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputBlock\":\"Filter_inputBlock__3GJFq\",\"inputField\":\"Filter_inputField__2xgV2\"};","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport styles from './Form.module.css';\n\nclass Form extends React.Component {\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n    onSubmit: PropTypes.func,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameId = shortid.generate();\n  numberId = shortid.generate();\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = event => {\n    const { onSubmit } = this.props;\n    event.preventDefault();\n    onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label htmlFor='nameId'>Name</label>\n        <input\n          className={styles.inputField}\n          name='name'\n          type='text'\n          value={name}\n          onChange={this.handleInputChange}\n          id='nameId'\n        />\n        <label htmlFor='numberId'>Number</label>\n        <input\n          className={styles.inputField}\n          name='number'\n          type='text'\n          value={number}\n          onChange={this.handleInputChange}\n          id='numberId'\n        />\n        <button type='submit' className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import styles from './Contact.module.css';\nimport PropTypes from 'prop-types';\n\nfunction Contact({ contacts = [], onDeleteContact }) {\n  return contacts.map(({ id, name, number }) => (\n    <li key={id} className={styles.listItem}>\n      <h2 className={styles.name}>{name}:</h2>\n      <p className={styles.number}>{number}</p>\n      <button className={styles.btn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  ));\n}\n\nexport default Contact;\n\nContact.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import Contact from '../Contact/Contact';\n\nfunction ContactsList({ contacts, onDeleteContact }) {\n  return (\n    <ul>\n      <Contact contacts={contacts} onDeleteContact={onDeleteContact} />\n    </ul>\n  );\n}\n\nexport default ContactsList;\n","import styles from './Filter.module.css';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nfunction Filter({ value = '', onChange }) {\n  const filterId = shortid.generate();\n  return (\n    <div className={styles.inputBlock}>\n      <label htmlFor={filterId}>Find contacts by name</label>\n      <input\n        className={styles.inputField}\n        value={value}\n        onChange={onChange}\n        id={filterId}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n","import React from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends React.Component {\n  static defaultProps = {\n    contacts: [],\n    filter: '',\n  };\n\n  static propTypes = {\n    contacts: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        number: PropTypes.string,\n        id: PropTypes.string.isRequired,\n      })\n    ),\n    filter: PropTypes.string,\n  };\n\n  state = {\n    contacts: this.props.contacts,\n    filter: this.props.filter,\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = data => {\n    if (data.name && data.number) {\n      const contact = {\n        id: shortid.generate(),\n        name: data.name,\n        number: data.number,\n      };\n\n      const namesArray = this.state.contacts.map(contact => contact.name);\n      if (namesArray.includes(data.name)) {\n        const alert = window.confirm(\n          `${data.name} is already in Phonebook. Do you want to add another number?`\n        );\n        if (!alert) {\n          return;\n        } else {\n          this.setState(prevState => ({\n            contacts: [...prevState.contacts, contact],\n          }));\n        }\n      } else {\n        this.setState(prevState => ({\n          contacts: [...prevState.contacts, contact],\n        }));\n      }\n    }\n  };\n\n  filterContacts = e => {\n    this.setState({\n      filter: e.target.value,\n    });\n  };\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.getFilteredContacts();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.filterContacts} />\n        <ContactsList\n          contacts={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2TM1N\",\"inputField\":\"Form_inputField__1GDGD\",\"btn\":\"Form_btn__aasqa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"Contact_listItem__2VBTs\",\"number\":\"Contact_number__2MvnN\",\"name\":\"Contact_name__2ZcKm\",\"btn\":\"Contact_btn__uMrZg\"};"],"sourceRoot":""}